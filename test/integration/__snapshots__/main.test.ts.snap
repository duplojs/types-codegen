// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`command > include all routes 1`] = `
"// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
interface CodegenReceiveFormData<GenericValue extends Record<string, string | string[] | number | number[] | Date | Date[] | File[]>> {
    extractor: (...args: any[]) => Promise<GenericValue>;
}

export { CodegenReceiveFormData };

type CodegenRoutes = ({
    method: "POST";
    path: "/pictures";
    body: CodegenReceiveFormData<{
        userId: string;
        pictures: File[];
    }>;
    headers?: {
        "test-headers"?: string | undefined;
    } | undefined;
    response: {
        code: 200;
        information: "picture.upload";
        body: File;
    };
}) | ({
    method: "GET";
    path: "/users/{userId}";
    params: {
        userId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "user.get";
        body: {
            name: string;
            age: number;
        };
    };
}) | ({
    method: "POST";
    path: "/users";
    body: {
        name: string;
        age: number;
    };
    response: {
        code: 201;
        information: "user.created";
        body: {
            name: string;
            age: number;
        };
    };
}) | ({
    method: "GET";
    path: "/users";
    response: {
        code: 200;
        information: "users.get";
        body: {
            name: string;
            age: number;
        }[];
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
"
`;

exports[`command > require scripts 1`] = `
"// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
interface CodegenReceiveFormData<GenericValue extends Record<string, string | string[] | number | number[] | Date | Date[] | File[]>> {
    extractor: (...args: any[]) => Promise<GenericValue>;
}

export { CodegenReceiveFormData };

type CodegenRoutes = ({
    method: "GET";
    path: "/users/{userId}";
    params: {
        userId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "user.get";
        body: {
            name: string;
            age: number;
        };
    };
}) | ({
    method: "POST";
    path: "/users";
    body: {
        name: string;
        age: number;
    };
    response: {
        code: 201;
        information: "user.created";
        body: {
            name: string;
            age: number;
        };
    };
}) | ({
    method: "GET";
    path: "/users";
    response: {
        code: 200;
        information: "users.get";
        body: {
            name: string;
            age: number;
        }[];
    };
}) | ({
    method: "POST";
    path: "/pictures";
    body: CodegenReceiveFormData<{
        userId: string;
        pictures: File[];
    }>;
    headers?: {
        "test-headers"?: string | undefined;
    } | undefined;
    response: {
        code: 200;
        information: "picture.upload";
        body: File;
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
"
`;
